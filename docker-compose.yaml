version: "3.8"

services:
  config-server:
    container_name: config-server
    image: config-server
    ports:
      - "8071:8071"
    healthcheck:
      test: curl -f http://localhost:8071/news-service/prod || exit 1
      interval: 30s
      retries: 3
      start_period: 20s
      timeout: 60s
    volumes:
      - /var/lib/docker/containers/:/usr/src/logs
    environment:
      - CONFIG_SERVER_PORT=8071

  news-server:
    build: .
    depends_on:
      postgresqldb:
        condition: service_healthy
      config-server:
        condition: service_healthy
      cache-server:
        condition: service_started
    ports:
      - "8080"
    environment:
      - CONFIG_SERVER_HOST=config-server
      - CACHE_HOST=cache-server
      - SPRING_PROFILES_ACTIVE=prod
      - CONFIG_SERVER_PORT=8071
      - POSTGRES_PASSWORD=0604
      - POSTGRES_USER=postgres
      - POSTGRES_DB=news_portal
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresqldb/news_portal
      - EUREKA_SERVER=http://eureka-server:8761/eureka
    links:
      - config-server
      - eureka-server
      - cache-server


  postgresqldb:
    container_name: postgresqldb
    image: postgres
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: 0604
      POSTGRES_USER: postgres
      POSTGRES_DB: news_portal
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - .:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "psql -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5


  eureka-server:
    image: eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_started

  cache-server:
    image: redis:latest
    container_name: cache-server
    restart: always
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - /redis_data:/data








